{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\Douglas\\\\Software Engineering\\\\EasyMeals\\\\EasyMeals\\\\EasyMealsWeb\\\\pages\\\\index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from 'isomorphic-unfetch';\n\nvar Index = function Index(props) {\n  return __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 5\n    }\n  }, \"Hello\");\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('http://localhost:8000/api/query/getRecipeById', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application-json'\n            },\n            body: JSON.stringify({\n              'recipeId': '485365'\n            })\n          }));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          console.log(data);\n          return _context.abrupt(\"return\", {\n            data: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["E:/Douglas/Software Engineering/EasyMeals/EasyMeals/EasyMealsWeb/pages/index.js"],"names":["fetch","Index","props","getInitialProps","method","headers","body","JSON","stringify","res","json","data","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADe;AAAA,CAAnB;;AAIAD,KAAK,CAACE,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACJH,KAAK,CAAC,+CAAD,EAAkD;AACrEI,YAAAA,MAAM,EAAE,MAD6D;AAErEC,YAAAA,OAAO,EAAE;AACL,8BAAgB;AADX,aAF4D;AAKrEC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAC,0BAAY;AAAb,aAAf;AAL+D,WAAlD,CADD;;AAAA;AAChBC,UAAAA,GADgB;AAAA;AAAA,2CAQHA,GAAG,CAACC,IAAJ,EARG;;AAAA;AAQhBC,UAAAA,IARgB;AAUtBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAVsB,2CAYf;AACLA,YAAAA,IAAI,EAAJA;AADK,WAZe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAiBA,eAAeV,KAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\r\n\r\nconst Index = props => (\r\n    <h1>Hello</h1>\r\n);\r\n\r\nIndex.getInitialProps = async function() {\r\n  const res = await fetch('http://localhost:8000/api/query/getRecipeById', {\r\n      method: 'POST',\r\n      headers: {\r\n          'Content-Type': 'application-json'\r\n      },\r\n      body: JSON.stringify({'recipeId': '485365'})\r\n  });\r\n  const data = await res.json();\r\n\r\n  console.log(data);\r\n\r\n  return {\r\n    data\r\n  };\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}